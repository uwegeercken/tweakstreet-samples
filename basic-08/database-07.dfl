{
  "type": "data-flow",
  "appVersion": "1.11.0",
  "properties": {
    "meta": {
      "comment": {
        "markdown": {
          "text": {
            "text": "##### Info\n\nFlow demonstrates reading data from a SQLite database:\n* reading airport and country data from a SQLite database file \n* parse the country_details string into a dictionary already in the SQL query\n* output the results to a Dummy step\n\nFlow uses variables and the database connection from the global module: _conf-module-samples.tsm_\n",
            "syntax": "markdown",
            "size": {
              "width": "100%",
              "height": "100%"
            }
          },
          "size": {
            "width": null,
            "height": 234
          },
          "view": "preview"
        },
        "editor": {
          "collapsed": false
        }
      },
      "showingComment": true
    },
    "editor": {
      "showParameters": true,
      "showVariables": true,
      "showServices": true,
      "dialogWidth": "wide"
    },
    "imports": {
      "code": "# import the standard library\nimport core, data, strings, time, math, fun, locale, regex, bin, decimals from 'std';\n",
      "size": {
        "width": 0,
        "height": 74
      },
      "editor": {
        "collapsed": false
      }
    },
    "parameters": {
      "parameters": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "variables": {
      "variables": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "services": {
      "services": {
        "list": [
          {
            "name": "sqlite-airports",
            "type": "any",
            "category": "jdbc",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.services.`sqlite-airports`",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.services.`sqlite-airports`"
            }
          }
        ]
      },
      "editor": {
        "collapsed": false
      }
    }
  },
  "steps": [
    {
      "id": "com.twineworks.tweakstreet.library.steps.input.sqlinput_9a86ea35-e216-44ef-b27c-845aac55de76",
      "name": "SQL Input: airports and countries",
      "type": "com.twineworks.tweakstreet.library.steps.input.sqlinput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "SQL Input: airports and countries",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### Info\n\nQuerying the data from the SQLite database. We use the database functions to retrieve\nthe country related data from the JSON formatted data in the country_details field.\n\nNot all fields returned by the query are output.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 129
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "connection": {
          "widgetType": "expression/database-ref",
          "widgetData": {
            "name": "sqlite-airports"
          },
          "code": "::flow.services.`sqlite-airports`"
        },
        "fetchSize": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "10000"
          },
          "code": "10000"
        },
        "rowLimit": {
          "widgetType": "expression/nil",
          "widgetData": {},
          "code": "nil"
        },
        "query": {
          "widgetType": "expression/text",
          "widgetData": {
            "text": "SELECT \n          id,\n          name,\n          elevation,\n          json_extract(country_details, '$.name') as country_name,\n          json_extract(country_details, '$.iata_code') as country_iata_code\nfrom \n          airports_countries\nlimit\n          50\n       ",
            "size": {
              "width": 0,
              "height": 226
            },
            "syntax": "sql",
            "lineSeparator": "\n",
            "interpolation": false
          },
          "code": "'SELECT \n          id,\n          name,\n          elevation,\n          json_extract(country_details, ''$.name'') as country_name,\n          json_extract(country_details, ''$.iata_code'') as country_iata_code\nfrom \n          airports_countries\nlimit\n          50\n       '"
        },
        "jdbcParams": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "readFields": {
          "readFields": {
            "list": [
              {
                "name": "id",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "id"
                  },
                  "code": "'id'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "name",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "name"
                  },
                  "code": "'name'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "elevation",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "elevation"
                  },
                  "code": "'elevation'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "country_name",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "country_name"
                  },
                  "code": "'country_name'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "country_iata_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "country_iata_code"
                  },
                  "code": "'country_iata_code'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 266,
        "y": 138
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.dummy_64865d99-b39a-4b6b-aa94-225915e1377d",
      "name": "Dummy",
      "type": "com.twineworks.tweakstreet.library.steps.map.dummy",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Dummy",
          "comment": {
            "markdown": {
              "text": {
                "text": ""
              },
              "size": {
                "width": null,
                "height": 160
              },
              "editor": {
                "collapsed": true
              }
            }
          },
          "showingComment": false
        },
        "editor": {}
      },
      "pos": {
        "x": 522,
        "y": 138
      }
    }
  ],
  "hops": [
    {
      "id": "d865e5ef-7fe2-4a96-bb12-fd5a9bafb88d",
      "fromStep": "com.twineworks.tweakstreet.library.steps.input.sqlinput_9a86ea35-e216-44ef-b27c-845aac55de76",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.dummy_64865d99-b39a-4b6b-aa94-225915e1377d",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    }
  ]
}