{
  "type": "data-flow",
  "appVersion": "1.11.0",
  "properties": {
    "meta": {
      "comment": {
        "markdown": {
          "text": {
            "text": "##### Info\n\nFlow demonstrates writing data to a SQLite database and how to store data of a dict type field:\n* reading airport data\n* reading country data for the lookup, The result - a dict - is converted to a string\n* remove fields we do not need\n* output the results to a SQLite database \n\nThe next sample - database-06.dfl - will show how to retrieve the data from the database and restore the dictionary we have stored \nas a string.\n\nFlow uses variables and the database connection from the global module: _conf-module-samples.tsm_\n",
            "syntax": "markdown",
            "size": {
              "width": "100%",
              "height": "100%"
            }
          },
          "size": {
            "width": null,
            "height": 295
          },
          "view": "preview"
        },
        "editor": {
          "collapsed": false
        }
      },
      "showingComment": true
    },
    "editor": {
      "showParameters": true,
      "showVariables": true,
      "showServices": true,
      "dialogWidth": "wide"
    },
    "imports": {
      "code": "# import the standard library\nimport core, data, strings, time, math, fun, locale, regex, bin, decimals from 'std';\n# import the json module\nimport json from 'tweakstreet/json';",
      "size": {
        "width": 0,
        "height": 102
      },
      "editor": {
        "collapsed": false
      }
    },
    "parameters": {
      "parameters": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "variables": {
      "variables": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "services": {
      "services": {
        "list": [
          {
            "name": "sqlite-airports",
            "type": "any",
            "category": "jdbc",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.services.`sqlite-airports`",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.services.`sqlite-airports`"
            }
          }
        ]
      },
      "editor": {
        "collapsed": false
      }
    }
  },
  "steps": [
    {
      "id": "com.twineworks.tweakstreet.library.steps.input.sqlinput_9a86ea35-e216-44ef-b27c-845aac55de76",
      "name": "SQL Input: airports",
      "type": "com.twineworks.tweakstreet.library.steps.input.sqlinput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "SQL Input: airports",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### Info\n\nQuerying the data from the SQLite database.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 129
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "connection": {
          "widgetType": "expression/database-ref",
          "widgetData": {
            "name": "sqlite-airports"
          },
          "code": "::flow.services.`sqlite-airports`"
        },
        "fetchSize": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "10000"
          },
          "code": "10000"
        },
        "rowLimit": {
          "widgetType": "expression/nil",
          "widgetData": {},
          "code": "nil"
        },
        "query": {
          "widgetType": "expression/text",
          "widgetData": {
            "text": "SELECT \n        * \nfrom \n        airports\nwhere\n        elevation >= 7000\n        \n       ",
            "size": {
              "width": 0,
              "height": 152
            },
            "syntax": "sql",
            "lineSeparator": "\n",
            "interpolation": false
          },
          "code": "'SELECT \n        * \nfrom \n        airports\nwhere\n        elevation >= 7000\n        \n       '"
        },
        "jdbcParams": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "readFields": {
          "readFields": {
            "list": [
              {
                "name": "id",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "id"
                  },
                  "code": "'id'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "name",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "name"
                  },
                  "code": "'name'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "description",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "description"
                  },
                  "code": "'description'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "country_id",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "country_id"
                  },
                  "code": "'country_id'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "iata_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "iata_code"
                  },
                  "code": "'iata_code'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "icao_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "icao_code"
                  },
                  "code": "'icao_code'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "latitude",
                "type": "decimal",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "latitude"
                  },
                  "code": "'latitude'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "longitude",
                "type": "decimal",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "longitude"
                  },
                  "code": "'longitude'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "elevation",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "elevation"
                  },
                  "code": "'elevation'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 266,
        "y": 362
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.sqllookup_6651c836-891d-4788-ab81-c01b7de4e05d",
      "name": "SQL Lookup: countries",
      "type": "com.twineworks.tweakstreet.library.steps.map.sqllookup",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "SQL Lookup: countries",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### Info\n\nLookup the country iata code and name from the countries table. The keys for the lookup are\nthe country_id in the airports table and the id in the countries table.\n\nThe country details are returned as a dictionary of key/values and we convert them to\na string so that it can be stored in the database.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 194
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "connection": {
          "widgetType": "expression/database-ref",
          "widgetData": {
            "name": "sqlite-airports"
          },
          "code": "::flow.services.`sqlite-airports`"
        },
        "schema": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": ""
          },
          "code": "''"
        },
        "table": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "countries"
          },
          "code": "'countries'"
        },
        "tabs": {},
        "writeFields": {
          "writeFields": {
            "list": [
              {
                "name": "id",
                "type": "long",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "country_id"
                      }
                    }
                  },
                  "code": "::in.country_id"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "dataFields": {
          "readFields": {
            "list": [
              {
                "name": "iata_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "iata_code"
                  },
                  "code": "'iata_code'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "name",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "name"
                  },
                  "code": "'name'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "useCache": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "cacheSize": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "100000"
          },
          "code": "100000"
        },
        "preloadCache": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "preloadCachePredicate": {
          "widgetType": "expression/text",
          "widgetData": {
            "text": "",
            "size": {
              "width": 0,
              "height": 120
            },
            "syntax": "sql",
            "lineSeparator": "\n",
            "interpolation": true
          },
          "code": "''"
        },
        "preloadCacheParams": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "useBloomFilter": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "bloomFilterSize": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "10_000_000"
          },
          "code": "10_000_000"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "country_details",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "# the result is a dict but we store it as\n# a string in the database\njson.stringify(results.lookup)",
                    "size": {
                      "width": 0,
                      "height": 76
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "# the result is a dict but we store it as\n# a string in the database\njson.stringify(results.lookup)\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "fetchFields": {
          "value": "lookup_"
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 490,
        "y": 362
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.pickfields_cca44360-7760-407f-89ac-16306f627f0c",
      "name": "Pick Fields",
      "type": "com.twineworks.tweakstreet.library.steps.map.pickfields",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Pick Fields",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nRemove the country_id field as we do not need it anymore",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 110
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "mode": {
          "value": "blacklist"
        },
        "fieldRefs": {
          "fieldRefs": {
            "list": [
              {
                "field": {
                  "value": {
                    "gate": "in",
                    "name": "country_id"
                  }
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {},
        "model": {}
      },
      "pos": {
        "x": 714,
        "y": 362
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.output.sqlinsert_4ec1a861-3cdc-46dd-82ca-e2a6673e8f79",
      "name": "SQL Insert",
      "type": "com.twineworks.tweakstreet.library.steps.output.sqlinsert",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "SQL Insert",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nStore the data in a table. The country_details from the lookup step which are in \na dictionary, are stored as a string in the database, as there is no specific \nJSON type available.\n\nBut SQLIte offers several JSON related functions to retrieve elements from JSON \nformatted data such as json_extract(), json_valid(), json_quote(), json_type(), \netc.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 197
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "connection": {
          "widgetType": "expression/database-ref",
          "widgetData": {
            "name": "sqlite-airports"
          },
          "code": "::flow.services.`sqlite-airports`"
        },
        "schema": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": ""
          },
          "code": "''"
        },
        "table": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "airports_countries"
          },
          "code": "'airports_countries'"
        },
        "batchSize": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "1000"
          },
          "code": "1000"
        },
        "commitSize": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "1000"
          },
          "code": "1000"
        },
        "getGeneratedKeys": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "pkField": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": ""
          },
          "code": "''"
        },
        "fieldMode": {
          "value": "fixed"
        },
        "dataDrivenColumns": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "type",
                "name": "type"
              },
              {
                "id": "name",
                "name": "name"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "dataDrivenValues": {
          "widgetType": "expression/field-value-ref",
          "widgetData": {
            "fieldSelect": {
              "value": null
            }
          },
          "code": "nil"
        },
        "writeFields": {
          "writeFields": {
            "list": [
              {
                "name": "id",
                "type": "long",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "id"
                      }
                    }
                  },
                  "code": "::in.id"
                }
              },
              {
                "name": "name",
                "type": "string",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "name"
                      }
                    }
                  },
                  "code": "::in.name"
                }
              },
              {
                "name": "description",
                "type": "string",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "description"
                      }
                    }
                  },
                  "code": "::in.description"
                }
              },
              {
                "name": "iata_code",
                "type": "string",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "iata_code"
                      }
                    }
                  },
                  "code": "::in.iata_code"
                }
              },
              {
                "name": "icao_code",
                "type": "string",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "icao_code"
                      }
                    }
                  },
                  "code": "::in.icao_code"
                }
              },
              {
                "name": "latitude",
                "type": "decimal",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "latitude"
                      }
                    }
                  },
                  "code": "::in.latitude"
                }
              },
              {
                "name": "longitude",
                "type": "decimal",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "longitude"
                      }
                    }
                  },
                  "code": "::in.longitude"
                }
              },
              {
                "name": "elevation",
                "type": "long",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "elevation"
                      }
                    }
                  },
                  "code": "::in.elevation"
                }
              },
              {
                "name": "country_details",
                "type": "string",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "country_details"
                      }
                    }
                  },
                  "code": "::in.country_details"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "sqlEditor": {
          "text": "CREATE TABLE airports_countries (\n  id INTEGER,\n  name VARCHAR(255),\n  description VARCHAR(255),\n  iata_code VARCHAR(4),\n  icao_code VARCHAR(4),\n  latitude DECIMAL(10,2),\n  longitude DECIMAL(10,2),\n  elevation INTEGER,\n  country_details TEXT\n)",
          "size": {
            "width": 0,
            "height": 180
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showWriteFields": true,
          "showSqlEditor": true,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 938,
        "y": 362
      }
    }
  ],
  "hops": [
    {
      "id": "bd6d8626-8ea2-41de-a9d8-c94b6940ff4b",
      "fromStep": "com.twineworks.tweakstreet.library.steps.input.sqlinput_9a86ea35-e216-44ef-b27c-845aac55de76",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.sqllookup_6651c836-891d-4788-ab81-c01b7de4e05d",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "eb65b9ea-d05e-45e1-a87d-7ac17475788f",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.sqllookup_6651c836-891d-4788-ab81-c01b7de4e05d",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.pickfields_cca44360-7760-407f-89ac-16306f627f0c",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "1808257a-59c8-418b-9e01-d333bc656cdd",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.pickfields_cca44360-7760-407f-89ac-16306f627f0c",
      "toStep": "com.twineworks.tweakstreet.library.steps.output.sqlinsert_4ec1a861-3cdc-46dd-82ca-e2a6673e8f79",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    }
  ]
}