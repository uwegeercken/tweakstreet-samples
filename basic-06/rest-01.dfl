{
  "type": "data-flow",
  "appVersion": "1.14.2",
  "properties": {
    "meta": {
      "comment": {
        "markdown": {
          "text": {
            "text": "##### Info\n\nFlow demonstrates using the HTTP request step:\n* getting data from a REST endpoint\n* deviding the JSON response data into separate rows\n\n\n",
            "syntax": "markdown",
            "size": {
              "width": "100%",
              "height": "100%"
            }
          },
          "size": {
            "width": null,
            "height": 182
          },
          "view": "preview"
        },
        "editor": {
          "collapsed": false
        }
      },
      "showingComment": true
    },
    "editor": {
      "showParameters": true,
      "showVariables": true,
      "showServices": true,
      "dialogWidth": "wide"
    },
    "imports": {
      "code": "# import the standard library\n# import core, data, strings, time, math, fun, locale, regex, bin, decimals from 'std';\n",
      "size": {
        "width": 0,
        "height": 102
      },
      "editor": {
        "collapsed": false
      }
    },
    "parameters": {
      "parameters": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "variables": {
      "variables": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "services": {
      "services": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    }
  },
  "steps": [
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.httprequest_0c2b6c25-a8b2-4fcc-aaa6-89c2dd62f23b",
      "name": "Http Request",
      "type": "com.twineworks.tweakstreet.library.steps.map.httprequest",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Http Request",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nThe REST endpoint used here is from: http://www.dummy.restapiexample.com/\nwhich returns JSON data (employees).",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 126
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "method": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/httpMethod",
            "value": "GET"
          },
          "code": "'GET'"
        },
        "url": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "http://dummy.restapiexample.com/api/v1/employees"
          },
          "code": "'http://dummy.restapiexample.com/api/v1/employees'"
        },
        "urlParameters": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "name",
                "name": "name"
              },
              {
                "id": "value",
                "name": "value"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "authUser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": ""
          },
          "code": "''"
        },
        "authPassword": {
          "widgetType": "expression/password",
          "widgetData": {
            "text": "",
            "encrypted": false
          },
          "code": "''"
        },
        "oauth": {
          "widgetType": "expression/oauth-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "headers": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "name",
                "name": "name"
              },
              {
                "id": "value",
                "name": "value"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "cookies": {
          "widgetType": "expression/field-value-ref",
          "widgetData": {
            "fieldSelect": {
              "value": null
            }
          },
          "code": "nil"
        },
        "contentType": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/httpContentType",
            "value": "application/json"
          },
          "code": "'application/json'"
        },
        "bodyParameters": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "name",
                "name": "name"
              },
              {
                "id": "value",
                "name": "value"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "body": {
          "widgetType": "expression/text",
          "widgetData": {
            "text": "",
            "size": {
              "width": 0,
              "height": 49
            },
            "syntax": "javascript",
            "lineSeparator": "\r\n",
            "interpolation": true
          },
          "code": "''"
        },
        "followRedirects": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "bodyCapture": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "com.twineworks.tweakstreet.library.steps.map.httprequest/bodyCapture",
            "value": "capture_string"
          },
          "code": "'capture_string'"
        },
        "saveAsFile": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "",
            "dialogIntent": "saveFile"
          },
          "code": "''"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "success",
                "type": "boolean",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.success"
                  },
                  "code": "::results.success"
                }
              },
              {
                "name": "status",
                "type": "long",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.status"
                  },
                  "code": "::results.status"
                }
              },
              {
                "name": "response",
                "type": "any",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.response_json"
                  },
                  "code": "::results.response_json"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 394,
        "y": 186
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.flatmap.getitems_0a755668-ab1b-4484-ae4e-296fac68c3c6",
      "name": "List to Rows",
      "type": "com.twineworks.tweakstreet.library.steps.flatmap.getitems",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "List to Rows",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nThe list of employees in JSON format is split into individual rows.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 97
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "items": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "in.response[:data]",
            "size": {
              "width": 0,
              "height": 36
            },
            "syntax": "tweakflow"
          },
          "code": "in.response[:data]"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "item_nr",
                "type": "long",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.item_nr"
                  },
                  "code": "::results.item_nr"
                }
              },
              {
                "name": "item_count",
                "type": "long",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.item_count"
                  },
                  "code": "::results.item_count"
                }
              },
              {
                "name": "item",
                "type": "any",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.item"
                  },
                  "code": "::results.item"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 698,
        "y": 186
      }
    }
  ],
  "hops": [
    {
      "id": "669062bb-1e24-4407-9a50-caf9464cea4d",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.httprequest_0c2b6c25-a8b2-4fcc-aaa6-89c2dd62f23b",
      "toStep": "com.twineworks.tweakstreet.library.steps.flatmap.getitems_0a755668-ab1b-4484-ae4e-296fac68c3c6",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    }
  ]
}