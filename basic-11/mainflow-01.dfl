{
  "type": "data-flow",
  "appVersion": "1.19.1",
  "properties": {
    "meta": {
      "comment": {
        "markdown": {
          "text": {
            "text": "##### Info\n\nFlow demonstrates using a simple subflow:\n* a couple of rows are generated\n* for each generated row a random number is generated\n* the random number is passed to the subflow\n* the subflow calculates a result value and outputs it to the main flow\n* results are output to a dummy step\n\n\n",
            "syntax": "markdown",
            "size": {
              "width": "100%",
              "height": "100%"
            }
          },
          "size": {
            "width": null,
            "height": 250
          },
          "view": "preview"
        },
        "editor": {
          "collapsed": false
        }
      },
      "showingComment": true
    },
    "editor": {
      "showParameters": true,
      "showVariables": true,
      "showServices": true,
      "dialogWidth": "wide"
    },
    "imports": {
      "code": "# import the standard library\n# import core, data, strings, time, math, fun, locale, regex, bin, decimals from 'std';\n",
      "size": {
        "width": 0,
        "height": 102
      },
      "editor": {
        "collapsed": false
      }
    },
    "parameters": {
      "parameters": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "variables": {
      "variables": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "services": {
      "services": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    }
  },
  "steps": [
    {
      "id": "com.twineworks.tweakstreet.library.steps.flatmap.generaterows_55260b50-bf0a-47e7-8f86-de1a82686121",
      "name": "Generate Rows",
      "type": "com.twineworks.tweakstreet.library.steps.flatmap.generaterows",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Generate Rows",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 92
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "nrRows": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "30"
          },
          "code": "30"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "row_nr",
                "type": "long",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.row_nr"
                  },
                  "code": "::results.row_nr"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 488,
        "y": 236
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.randomdata_ebcb6b07-147d-44d0-98b7-d3a5e67b2a5b",
      "name": "Random Data",
      "type": "com.twineworks.tweakstreet.library.steps.map.randomdata",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Random Data",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### Info\n\nGenerating a random number\n",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 98
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "seed": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": ""
          },
          "code": "nil"
        },
        "generatorVariables": {
          "generatorVars": {
            "list": [
              {
                "type": "any",
                "name": "random_number",
                "generator": {
                  "widgetType": "expression/generate-number",
                  "widgetData": {
                    "start": {
                      "widgetType": "expression/number",
                      "widgetData": {
                        "text": "1"
                      },
                      "code": "1"
                    },
                    "end": {
                      "widgetType": "expression/number",
                      "widgetData": {
                        "text": "101"
                      },
                      "code": "101"
                    },
                    "decimalPlaces": {
                      "widgetType": "expression/number",
                      "widgetData": {
                        "text": "0"
                      },
                      "code": "0"
                    },
                    "distribution": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/distribution",
                        "value": "uniform"
                      },
                      "code": "'uniform'"
                    },
                    "nilChance": {
                      "widgetType": "expression/number",
                      "widgetData": {
                        "text": "0"
                      },
                      "code": "0"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_generator: (double start, double end, long decimalPlaces, any distribution, double nilChance) -> via {:class 'com.twineworks.tweakstreet.library.generate.Generators$number'};\n}\nmake_generator(1, 101, 0, 'uniform', 0)\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "random_number",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.generated[:random_number]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.generated[:random_number]"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 698,
        "y": 234
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.turing.subflow_b68943c9-37eb-404d-af98-96aee6216218",
      "name": "Sub Flow",
      "type": "com.twineworks.tweakstreet.library.steps.turing.subflow",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Sub Flow",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### Info\n\nThe subflow referenced here has one Interface Input and one Interface Output step. \nThey define the input and output fields of the subflow.\n\nDefine the subflow first - with Interface Input and Interface Output steps - save it, then fetch\nthe defined in- and output fields of the flow here from this dialog.\n\n\n",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 199
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "flowPath": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "./subflow-01.dfl",
            "dialogIntent": "openFile"
          },
          "code": "'./subflow-01.dfl'"
        },
        "params": {
          "widgetType": "expression/dict",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "{}"
        },
        "input": {
          "widgetType": "expression/dict",
          "widgetData": {
            "table": {
              "list": [
                {
                  "key": {
                    "widgetType": "expression/string",
                    "widgetData": {
                      "interpolation": true,
                      "text": "row_nr"
                    },
                    "code": "'row_nr'"
                  },
                  "value": {
                    "widgetType": "expression/field-value-ref",
                    "widgetData": {
                      "fieldSelect": {
                        "value": {
                          "gate": "in",
                          "name": "row_nr"
                        }
                      }
                    },
                    "code": "::in.row_nr"
                  }
                },
                {
                  "key": {
                    "widgetType": "expression/string",
                    "widgetData": {
                      "interpolation": true,
                      "text": "random_number"
                    },
                    "code": "'random_number'"
                  },
                  "value": {
                    "widgetType": "expression/field-value-ref",
                    "widgetData": {
                      "fieldSelect": {
                        "value": {
                          "gate": "in",
                          "name": "random_number"
                        }
                      }
                    },
                    "code": "::in.random_number"
                  }
                }
              ]
            }
          },
          "code": "{\n  'row_nr' ::in.row_nr,\n  'random_number' ::in.random_number\n}"
        },
        "rowMappingMode": {
          "value": "map_through_underscore"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "row_nr",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.output[:row_nr]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.output[:row_nr]"
                }
              },
              {
                "name": "random_number",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.output[:random_number]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.output[:random_number]"
                }
              },
              {
                "name": "type",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.output[:type]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.output[:type]"
                }
              },
              {
                "name": "value",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.output[:value]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.output[:value]"
                }
              },
              {
                "name": "calculation_result",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.output[:calculation_result]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.output[:calculation_result]"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 922,
        "y": 234
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.dummy_f97d6fa9-eb05-4906-bf94-6060e4735a7b",
      "name": "Dummy",
      "type": "com.twineworks.tweakstreet.library.steps.map.dummy",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Dummy",
          "comment": {
            "markdown": {
              "text": {
                "text": ""
              },
              "size": {
                "width": null,
                "height": 160
              },
              "editor": {
                "collapsed": true
              }
            }
          },
          "showingComment": false
        },
        "editor": {}
      },
      "pos": {
        "x": 1146,
        "y": 234
      }
    }
  ],
  "hops": [
    {
      "id": "63f7d616-d2f9-4ed0-93e7-636eb9b7d651",
      "fromStep": "com.twineworks.tweakstreet.library.steps.flatmap.generaterows_55260b50-bf0a-47e7-8f86-de1a82686121",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.randomdata_ebcb6b07-147d-44d0-98b7-d3a5e67b2a5b",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "3df284c1-60a8-416a-b495-ff64c8256baf",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.randomdata_ebcb6b07-147d-44d0-98b7-d3a5e67b2a5b",
      "toStep": "com.twineworks.tweakstreet.library.steps.turing.subflow_b68943c9-37eb-404d-af98-96aee6216218",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "06ff4e7d-a059-4086-bd88-ce66fbb54138",
      "fromStep": "com.twineworks.tweakstreet.library.steps.turing.subflow_b68943c9-37eb-404d-af98-96aee6216218",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.dummy_f97d6fa9-eb05-4906-bf94-6060e4735a7b",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    }
  ]
}